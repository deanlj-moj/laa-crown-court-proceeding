plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
}

group = 'uk.gov.justice.laa.crime'
version = '0.0.1-SNAPSHOT'

def versions = [
        springdocVersion: '1.6.11'
]

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.liquibase:liquibase-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springdoc:springdoc-openapi-ui:$versions.springdocVersion"

    compileOnly "org.projectlombok:lombok"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly "org.postgresql:postgresql"

    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "com.h2database:h2"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

tasks.named('test').configure {
    it.useJUnitPlatform()
    it.dependsOn 'cleanTest'
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            '**/entity/**',
                            '**/dto/**',
                            '**/config/**'
                    ])
        }))
    }

}
